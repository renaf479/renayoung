@mixin breakpoint($map) {
  $query: "";
  @if map-has-key($map, min) { $query: append($query, "(min-width: #{map-get($map, min)})") }
  @if map-has-key($map, min) and map-has-key($map, max) { $query: append($query, "and") }
  @if map-has-key($map, max) { $query: append($query, "(max-width: #{map-get($map, max)})") }
  @media screen and #{$query} { @content; }
}

@mixin angle($pseudo, $flip: false, $angle: 2.5deg) {
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 10;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');
    #{$selector} {
      content: '';
      display: block;
      position: absolute;
      background: inherit;
      left: 0;
      right: 0;
      height: 12%;
      z-index: 5;
      -webkit-backface-visibility: hidden;
    }
    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;
        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }
    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;
        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
    @if $pseudo == 'both' {
      &:before {
        top: 0;
        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
      &:after {
        bottom: 0;
        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}